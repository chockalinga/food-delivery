# Spring Boot automatically creates a JPA EntityManagerFactory using Hibernate
# but we need to override some defaults:
spring.jpa.hibernate.ddl-auto: update
spring.jpa.hibernate.show_sql= true
spring.jpa.hibernate.naming_strategy: org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view = true
# Spring performance optimization
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.javax.persistence.query.timeout= 60000
spring.jpa.properties.hibernate.query.plan_cache_max_soft_references= 1024
spring.jpa.properties.hibernate.query.plan_cache_max_strong_references= 64
spring.jpa.properties.hibernate.query.plan_cache_max_size= 1024
spring.jpa.properties.hibernate.query.plan_parameter_metadata_max_size= 32
spring.jpa.show-sql: true
# Connection properties
spring.datasource.url= jdbc:mysql://db:3306/playground?autoReconnect=true&useSSL=false
spring.datasource.username= playground
spring.datasource.password= password
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle= true
spring.datasource.validationQuery= SELECT 1
spring.datasource.driver-class-name= com.mysql.jdbc.Driver